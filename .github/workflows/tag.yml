name: Tag

permissions:
  issues: write

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Is this a pre-release tag or a final release tag'
        type: choice
        options:
          - pre-release
          - final
        required: true
      tag:
        description: 'Explicitly use this tag over any calculated tags'
        
env:
  GO_VERSION: "1.20.x"

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get SVU
        if: "${{ github.event.inputs.tag == '' }}"
        run: go install github.com/bradleyjones/svu@v0.2.0

      - name: Calculate tag
        if: "${{ github.event.inputs.tag == '' }} && ${{ github.event.inputs.release_type == 'final'}}"
        run: |
          if [[ "${{ github.event.inputs.tag }}" == "" ]] && [[ "${{ github.event.inputs.release_type }}" == "final" ]]; then
            echo "TAG_NAME=$(svu next)" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.tag }}" == "" ]] && [[ "${{ github.event.inputs.release_type }}" == "pre-release" ]]; then
            echo "TAG_NAME=$(svu prerelease --pre-release alpha)" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.tag }}" != "" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi
        id: version

      - name: Manual Tag Approval
        uses: trstringer/manual-approval@v1.9.0
        with:
          secret: ${{ github.TOKEN }}
          approvers: bradleyjones
          minimum-approvals: 1
          issue-title: "Creating new tag: ${{ steps.version.outputs.TAG_NAME }}"
          issue-body: "Please approve or deny the creation of this tag"
          exclude-workflow-initiator-as-approver: false

      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.version.outputs.TAG_NAME }}',
              sha: context.sha
            })

